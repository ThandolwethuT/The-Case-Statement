<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UHuIopCB1iiikg//2Q==
</value>
  </data>
</root>